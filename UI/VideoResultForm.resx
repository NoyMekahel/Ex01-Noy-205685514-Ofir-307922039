<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="videoResultWindowsMediaPlayer.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtwAAAAIB
        AAAAAQAAAAAAAAAAAAAAAKIAAAAAAwAACAAAAAAABQAAAAAAAADwPwMAAAAAAAUAAAAAAAAAAAAIAAIA
        AAAAAAMAAQAAAAsA//8DAAAAAAALAP//CAACAAAAAAADADIAAAALAAAACAAKAAAAZgB1AGwAbAAAAAsA
        AAALAAAACwD//wsA//8LAAAACAACAAAAAAAIAAIAAAAAAAgAAgAAAAAACAACAAAAAAALAAAAwAcAAGEC
        AAAL
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vwFQrMHNlLwy+wAAAABJRU5ErkJggg==
</value>
  </data>
</root>